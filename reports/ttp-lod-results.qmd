---
title: "TTP Limit of Detection"
author: "Suzanne Dufault"
format: 
  revealjs:
    self-contained: true
    self-contained-math: true
    scrollable: true
    smaller: true
editor: visual
execute:
  echo: false
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(here)
library(kableExtra)
library(knitr)
library(patchwork)
library(latex2exp)
library(ggalluvial)
library(tidybayes)

source(here("lib", "ucsf-color-palette.R"))
source(here("lib", "relative-function-mams.R")) # used for posterior comparison of regimens v control
source(here("lib", "relative-function-remox.R")) # used for posterior comparison of regimens v control
load(here("data", "cleaned-data", "2023-08-15_remoxtb-clean.RData"))
load(here("data", "cleaned-data", "2023-08-15_mams-clean.RData"))
theme_set(ggpubr::theme_pubr())
```

# General

## Overview (1/2)

-   BACTEC MGIT machine is the standard approach globally for detecting viable bacilli in a patient's sputum.
    -   Measures the decline of oxygen in a liquid culture tube inoculated with the sputum sample.
    -   Introduced during a major diagnostic development push at the end of the 1980s/early 1990s.
-   Samples observed no longer than 42 days, at which point the sample is declared \`\`negative'' for TB with no evidence for bacterial growth.

::: notes
I think the historical impact of the development of the BACTEC MGIT machine is super interesting!
:::

## Overview (2/2)

In practice, **very few samples return MGIT time-to-positivity values between 30 and 42 days**. While this range may be important for individual *diagnostic* purposes, the TTP values captured in this range may not contribute meaningfully to understanding the relative TTP trajectories at the regimen-level. We investigate whether using a lower limit of detection for longitudinal time-to-positivity modeling will improve precision for detecting differences between treatments, resulting in shorter trial times and improved power for performing regimen selection.

## Objective

Our objective is to examine existing TTP data from various case studies to better define the trajectory and variance of regimen-level TTP over time, while examining the impact of alternate limits of detection on power.

## Datasets

-   REMoxTB

-   PanACEA MAMS-TB

## REMoxTB

We will restrict to only those with:

-   `result = 0,1,2` (i.e., only those with a Negative (0), Positive (1), or Unconfirmed Positive (2) result)
-   `bact = 1` (i.e., MGIT)
-   `weeks <= 8` (i.e., only looking at observations within 8 weeks of randomization)
-   `!box_mitt %in% c(10,20,30)` excluding those with late screening failures

## MAMS

We restrict to those with:

-   `WEEK <= 8` (i.e., only looking at observations within 8 weeks of randomization)

-   `!is.na(DV)` (i.e., only those with an observed time to positivity)

## TB-PACTS NC-002 M-Pa-Z

```{r}
load("~/Documents/ucsf-research-git/tb-pacts-general/generated-datasets/2023-10-31_tb-pacts-data-with-ttp-measures.RData")
list2env(tb_pacts, envir = environment())
```

## TB-PACTS NC-005  M-Pa-Z-B

## TB-PACTS NC-006 (STAND)

## TB-PACTS TBTC-S29

## TB-PACTS TBTC-S29x

## Methods - Models

```{r}
complex_biphasic_trend <- function(weeks, alpha, beta1, beta2, kappa, gamma){
  alpha + beta1 * weeks + beta2 * gamma * log((exp((weeks - kappa)/gamma) + exp(-(weeks - kappa)/gamma))/(exp(kappa/gamma) + exp(-kappa/gamma))) 
}

data.frame(t = seq(0,8,length.out = 100)) %>% 
  mutate(y.biphasic = complex_biphasic_trend(weeks = t, 
                                             alpha = 0.81,
                                             beta1 = 0.1,
                                             beta2 = -0.04,
                                             kappa = 2,
                                             gamma = 0.24),
         y.linear = 0.860 + t*0.083) %>% 
  ggplot(aes(x = t)) + 
  geom_line(aes(y = y.biphasic)) + 
  geom_line(aes(y = y.linear),
            lty = 2) + 
  scale_y_continuous("TTP in days, log10 scale",
                     breaks = log10(c(1,5,10,15,25,30,42)),
                     labels = c(1,5,10,15,25,30,42)) + 
  coord_cartesian(ylim = c(log10(3),log10(42))) + 
  labs(x = "Weeks since randomization")
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "models", "00_models-hypothesized.tiff"),
       device = "tiff",
       height = 5,
       width = 7,
       units = "in",
       dpi = 300)
```

-   **Models:** Bayesian (linear fit), Burger bi-linear model, etc.

-   **LOQ:** 25, 30, 42

# Descriptive Profile

## Quick Summary

::: columns
::: {.column width="30%"}
```{r}
df_analysis_remox %>% 
  group_by(ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "REMoxTB") %>% 
  kable_styling(font_size = 20)

df_analysis_mams %>% 
  group_by(ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "MAMS-TB") %>% 
  kable_styling(font_size = 20)
```
:::

::: {.column width="30%"}
```{r}
df_analysis_remox %>% 
  group_by(week = floor(weeks), 
           ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  group_by(week) %>%
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "REMoxTB") %>% 
  kable_styling(font_size = 12)
```
:::

::: {.column width="30%"}
```{r}
df_analysis_mams %>% 
  group_by(week = floor(weeks), 
           ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  group_by(week) %>%
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "MAMS-TB") %>% 
  kable_styling(font_size = 12)
```
:::
:::

## TTP v. Time (REMoxTB)

```{r}
#| fig-cap: "Observed TTP trajectories, where anything at or above 42 receives a value of 42."
p1 <- df_analysis_remox %>% 
  # Averaging the replicate measures
  group_by(trial_no, weeks) %>% 
  mutate(dtp_42_avg = mean(dtp_42)) %>% 
  ggplot(aes(x = weeks, y = dtp_42, col = treat, lty = treat)) + 
  # geom_point(alpha = 0.3,
  #            position = position_jitter(width = 0.1,height = 0)) +
  geom_smooth(method = lm, 
              formula = y ~ splines::bs(x, 4)) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43))  + 
  geom_hline(yintercept = 42, 
             lty = 2) +
  theme(legend.position = c(0.8,0.2),
        legend.title = element_blank()) + 
  scale_color_manual(values = ucsf_col_pal)

p2 <- df_analysis_remox %>% 
  group_by(trial_no, weeks) %>% 
  # Averaging the replicate measures
  mutate(dtp_42_avg = mean(dtp_42)) %>% 
  ggplot(aes(x = weeks, y = dtp_42_avg, group=trial_no)) + 
  facet_wrap(~treat, ncol = 1) + 
  geom_line(alpha = 0.1,
            col = "darkgray") + 
  geom_smooth(aes(group = treat,
                  lty = treat),
              method = lm, 
              formula = y ~ splines::bs(x, 4),
              col = "black",
              se = FALSE) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43)) +
  geom_hline(yintercept = 42, 
             lty = 2) + 
  theme(legend.position = "none")

p1 + p2 + 
  plot_annotation(tag_levels = "A")
```

```{r}
#| eval: false
ggsave(file = here("graphs", "descriptive", "01_trajectories-remox-tb.tiff"),
       device = "tiff",
       height = 5,
       width = 10,
       units = "in",
       dpi = 300)
```

## TTP v. Time (REMoxTB) Takeaway

Panel A

-   The two novel regimen trajectories are indistinguishable from each other.
-   Both novel regimens appear to improve TTP faster than control.

Panel B

-   Individual trajectories are often high variance
-   Individual trajectories tend to be increasing over time. There are very few that appear to start high/low and stay there. (e.g., treatment effect is observable)

## TTP v. Time (MAMS-TB)

```{r}
#| fig-cap: "Observed TTP trajectories, where anything at or above 42 receives a value of 42."
p1_mams <- df_analysis_mams %>% 
  # Averaging the replicate measures
  group_by(patient.id, weeks) %>% 
  mutate(dtp_42_avg = mean(dtp_42)) %>% 
  ggplot(aes(x = weeks, y = dtp_42, col = Treatm_arm, lty = Treatm_arm)) + 
  # geom_point(alpha = 0.3,
  #            position = position_jitter(width = 0.1,height = 0)) +
  geom_smooth(method = lm, 
              formula = y ~ splines::bs(x, 4), 
              aes(group = Treatm_arm)) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43))  + 
  geom_hline(yintercept = 42, 
             lty = 2) +
  theme(legend.position = c(0.8,0.2),
        legend.title = element_blank()) + 
  scale_color_manual(values = ucsf_col_pal)

p2_mams <- df_analysis_mams %>% 
  # Averaging the replicate measures
  group_by(patient.id, weeks) %>% 
  mutate(dtp_42_avg = mean(dtp_42)) %>%
  ggplot(aes(x = weeks, y = dtp_42_avg, group=patient.id)) + 
  facet_wrap(~Treatm_arm, ncol = 1) + 
  geom_line(alpha = 0.3,
            col = "darkgray") + 
  geom_smooth(aes(group = Treatm_arm,
                  lty = Treatm_arm),
              method = lm, 
              formula = y ~ splines::bs(x, 4),
              col = "black",
              se = FALSE) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43)) +
  geom_hline(yintercept = 42, 
             lty = 2) + 
  theme(legend.position = "none")

p1_mams + p2_mams + 
  plot_annotation(tag_levels = "A")
```

```{r}
#| eval: false
ggsave(file = here("graphs", "descriptive", "01_trajectories-mams-tb.tiff"),
       device = "tiff",
       height = 7,
       width = 11,
       units = "in",
       dpi = 300)
```

```{r}
#| eval: false
(p1 + p2) / (p1_mams + p2_mams) + 
  plot_annotation(tag_levels = "A")

ggsave(file = here("graphs", "descriptive", "01_trajectories-combined.tiff"),
       device = "tiff",
       height = 12,
       width = 15,
       units = "in",
       dpi = 300)
```

## TTP v. Time (MAMS-TB) Takeaway

Panel A

-   There is substantial overlap between all regimens, but all appear to have steeper slope (at least initially) during the first 4 weeks.

Panel B

-   Individual trajectories are often high variance
-   Individual trajectories tend to be increasing over time. There are very few that appear to start high/low and stay there. (e.g., treatment effect is observable)

## NC-002


## Data Distribution v. Time

\[WANT ALLUVIAL PLOT... \]

```{r}
p1 <- df_analysis_remox %>% 
  group_by(weeks = round(weeks), treat) %>% 
  summarise(prop.g25 = mean(dtp > 30 & !is.na(dtp))) %>% 
  ggplot(aes(x = weeks, y = prop.g25, col = treat)) + 
  geom_line() + 
  scale_y_continuous("P(30 < DTP < 42)") +
  coord_cartesian(ylim = c(0,1)) +
  theme_bw() + 
  theme(legend.title = element_blank())

p2 <- df_analysis_remox %>% 
  group_by(weeks = round(weeks), treat) %>% 
  summarise(prop.g25 = mean(is.na(dtp))) %>% 
  ggplot(aes(x = weeks, y = prop.g25, col = treat)) + 
  geom_line() + 
  scale_y_continuous("P(DTP >= 42)") +
  coord_cartesian(ylim = c(0,1)) +
  theme_bw() + 
  theme(legend.title = element_blank())

p3 <- df_analysis_remox %>% 
  group_by(weeks = round(weeks), treat) %>% 
  summarise(prop.g25 = mean(dtp <= 30)) %>% 
  ggplot(aes(x = weeks, y = prop.g25, col = treat)) + 
  geom_line() + 
  scale_y_continuous("P(DTP <= 30)") +
  coord_cartesian(ylim = c(0,1)) +
  theme_bw() + 
  theme(legend.title = element_blank())

p2 / p1 / p3 + 
  plot_annotation(tag_levels = "A")
```

## Weekly Alluvial Plot - REMoxTB

```{r}
df_remox_flow <-
  df_analysis_remox %>% 
  mutate(weeks_rounded = ceiling(weeks)) %>% 
  group_by(trial_no, weeks_rounded) %>% 
  mutate(dtp_mean = mean(dtp_42, na.rm = TRUE)) %>% # For individuals who have more than one observed TTP in a week
  mutate(category = case_when(dtp_mean <= 30 ~ "TTP \u2264 30",
                              dtp_mean > 30 & dtp_mean < 42 ~ "30 < TTP < 42",
                              dtp_mean >= 42 | is.na(dtp_mean) ~ "TTP \u2265 42")) %>% 
  mutate(category = factor(category, levels = c("TTP \u2265 42", "30 < TTP < 42", "TTP \u2264 30"))) %>% 
  dplyr::select(trial_no, weeks_rounded, category) %>% 
  distinct() #%>% arrange(trial_no, weeks_rounded) 

alluv_remox <- ggplot(df_remox_flow, aes(x = weeks_rounded, stratum = category, alluvium = trial_no, fill = category)) + 
  geom_flow() + 
  scale_fill_manual(values = ucsf_col_pal[c(2,9,6)]) +
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  geom_stratum(col = "white") +
  labs(x = "Weeks from randomization",
       y = "Number of samples") + 
  theme(legend.title = element_blank())

alluv_remox
```

## Weekly Alluvial Plot - MAMS-TB

```{r}
df_mams_flow <-
  df_analysis_mams %>% 
  mutate(weeks_rounded = floor(weeks)) %>% 
  group_by(patient.id, weeks_rounded) %>% 
  mutate(dtp_mean = mean(dtp_42, na.rm = TRUE)) %>% # For individuals who have more than one observed TTP in a week
  mutate(category = case_when(dtp_mean <= 30 ~ "TTP \u2264 30",
                              dtp_mean > 30 & dtp_mean < 42 ~ "30 < TTP < 42",
                              dtp_mean >= 42 | is.na(dtp_mean) ~ "TTP \u2265 42")) %>% 
  mutate(category = factor(category, levels = c("TTP \u2265 42", "30 < TTP < 42", "TTP \u2264 30"))) %>% 
  dplyr::select(patient.id, weeks_rounded, category) %>% 
  distinct() #%>% arrange(trial_no, weeks_rounded) 

alluv_mams <- ggplot(df_mams_flow, aes(x = weeks_rounded, stratum = category, alluvium = patient.id, fill = category)) + 
  geom_flow() + 
  scale_fill_manual(values = ucsf_col_pal[c(2,9,6)]) +
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  geom_stratum(col = "white") +
  labs(x = "Weeks from randomization",
       y = "Number of samples") + 
  theme(legend.title = element_blank())

alluv_mams
```

```{r}
#| eval: false
alluv_remox / alluv_mams + 
  plot_annotation(tag_levels = "A") + 
  plot_layout(guides = "collect")

ggsave(file = here("graphs", "descriptive", "02_alluvial-combined.tiff"),
       device = "tiff",
       height = 5,
       width = 7,
       units = "in",
       dpi = 300)
```

## Alluvial Plots: Takeaways

-   "Most" people convert from TTP less than 30 to above the limit of detection *without* a sample returning a TTP between 30 and 42 days.
-   The 30-42 day observations tend to occur in weeks 4+
-   **NOTE** by week 8, the majority of samples are not returning any information.

## Weekly TTP Distribution (REMoxTB)

```{r}
#| fig-cap: "Distribution of TTP measures at each week post-randomization."
df_analysis_remox %>% 
  mutate(weeks_cat = floor(weeks)) %>% #with(., table(weeks_cat))
  mutate(weeks_cat = factor(weeks_cat)) %>% 
  ggplot(aes(x = dtp_42)) + 
  facet_wrap(~weeks_cat)+#, 
             # scales = "free_y") + 
  geom_histogram() + 
  geom_vline(xintercept = c(30,42), lty = 2) + 
  scale_x_log10("Days to Positivity, log scale",
                breaks = c(1,5,10,20,35),
                labels = c(1,5,10,20,35)) + 
  theme(axis.title.y = element_blank())
```

## Takeaway: Weekly TTP Distribution (REMoxTB)

# Variance/Signal-to-Noise Investigation

## Proportion of data censored for varying LOQ limits

*Idea:* Maybe this should a "relative" to 42 plot, rather than an absolute plot? Would that make it easier to read? or add in limited horizontal lines?

```{r}
# TTP \u2265 
# TTP \u2265 
# TTP \u2265 
# TTP \u2265 
p_cens_remox <- df_analysis_remox %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  pivot_longer(names_to = "TTP censoring limit",
               values_to = "Proportion of samples below limit",
               cols = 2:5) %>% 
  ggplot(aes(x = week, y = `Proportion of samples below limit`, fill = `TTP censoring limit`)) + 
  geom_bar(position = position_dodge(),
           col = "white",
           stat = "identity") + 
  scale_fill_manual(values = ucsf_col_pal) +
  scale_y_continuous(breaks = seq(0,1,by = 0.1),
                     labels = seq(0,1,by = 0.1)) + 
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  labs(x = "Weeks since randomization") + 
  coord_cartesian(ylim = c(0,1))

p_cens_mams <- df_analysis_mams %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  pivot_longer(names_to = "TTP censoring limit",
               values_to = "Proportion of samples below limit",
               cols = 2:5) %>% 
  ggplot(aes(x = week, y = `Proportion of samples below limit`, fill = `TTP censoring limit`)) + 
  geom_bar(position = position_dodge(),
           col = "white",
           stat = "identity") + 
  # theme(axis.title.y = element_blank()) + 
  scale_fill_manual(values = ucsf_col_pal) +
  scale_y_continuous(breaks = seq(0,1,by = 0.1),
                     labels = seq(0,1,by = 0.1)) + 
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  labs(x = "Weeks since randomization") + 
  coord_cartesian(ylim = c(0,1))

p_cens_remox + p_cens_mams + 
  plot_layout(guides = "collect") + 
  plot_annotation(tag_levels = "A")  &
  theme(legend.position = "bottom")
```

```{r}
#| eval: false
ggsave(file = here("graphs", "descriptive", "03_bar-censored-combined.tiff"),
       device = "tiff",
       height = 5,
       width = 8,
       units = "in",
       dpi = 300)
```

## Table Censored (REMoxTB)

```{r}
df_analysis_remox %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  mutate("Difference in proportions: 42 v 30 days" = `42 days` - `30 days`) %>%
  kable(digits = 4, 
        caption = "Proportion of samples below censoring limit") %>% 
  kable_styling(font_size = 18)
```

## Table Censored (MAMS)

```{r}
df_analysis_mams %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  mutate("Difference in proportions: 42 v 30 days" = `42 days` - `30 days`) %>% 
  kable(digits = 4,
        caption = "Proportion of samples below censoring limit") %>% 
  kable_styling(font_size = 18)
```

```{r}
#| eval: false
df_analysis_mams %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("TTP \u2265 25" = mean(dtp_42 >= 25, na.rm = TRUE),
            "TTP \u2265 30" = mean(dtp_42 >= 30, na.rm = TRUE),
            "TTP \u2265 35" = mean(dtp_42 >= 35, na.rm = TRUE),
            "TTP \u2265 42" = mean(dtp_42 >= 42, na.rm = TRUE)) %>% 
  # mutate("Absolute difference in proportions: 30 v 42 days" = `TTP ≥ 30` - `TTP ≥ 42`) %>% 
  kable(digits = 3,
        caption = "Proportion censored",
        format = "latex") %>% 
  kable_styling()
```

## Takeaway

-   Changing the censoring limit to 30 or 35 has very limited impact on the proportion of data "left out" of the analyses, especially at early weeks where the data is the richest.

# Modeling Work

<!-- ## MAMS-TB: LINEAR (population level) -->

```{r}
# mcmc_trace_fun <- function(pars){
#   mcmc_trace(posterior_main,
#              pars = pars,
#              facet_args = list(nrow = 2, labeller = label_parsed)) 
# }

load(here("data", "model-generated", "2023-07-20_linear-mams-lod-42.RData"))
load(here("data", "model-generated", "2023-07-20_linear-mams-lod-30.RData"))
load(here("data", "model-generated", "2023-08-15_linear-mams-lod-25.RData"))
load(here("data", "model-generated", "2023-07-20_linear-remox-lod-42.RData"))
load(here("data", "model-generated", "2023-07-31_linear-remox-lod-30.RData"))
load(here("data", "model-generated", "2023-09-01_linear-remox-lod-25.RData"))
```

```{r}
#| eval: false
# THIS EVALUATES THE POPULATION-LEVEL SLOPE, BUT WE ARE INTERESTED IN THE GROUP-LEVEL SLOPE
o_42 <- m_linear_mams_42 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(LOQ = 42)

o_30 <- m_linear_mams_30 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(LOQ = 30)

o_25 <- m_linear_mams_25 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(LOQ = 25)

bind_rows(o_42, o_30, o_25) %>%
  mutate(ci.width = .upper - .lower,
         estimate.ratio = .value/.value[LOQ == 42]) %>%
  mutate(ci.ratio = ci.width/ci.width[LOQ==42]) %>%
  kable(digits = 3, caption = "30 may be too low for the MAMS data. Curious about other cutoffs. Perhaps a grid run? Linear models compile within 5 minutes.") %>%
  kable_styling(font_size = 16)

o_42 <- m_linear_remox_42 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(LOQ = 42)

o_30 <- m_linear_remox_30 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(LOQ = 30)

bind_rows(o_42, o_30) %>%
  mutate(ci.width = .upper - .lower,
         estimate.ratio = .value[LOQ == 30]/.value[LOQ == 42]) %>%
  mutate(ci.ratio = ci.width[LOQ == 30]/ci.width[LOQ==42]) %>%
  kable(digits = 3, caption = "REMox") %>%
  kable_styling(font_size = 16)
```

## MAMS-TB: Linear (treatment level)

```{r}
coef_mams_25 <-
    coef(m_linear_mams_25, summary = F)$Treatm_arm %>% 
    as_tibble()

t25 <- coef_mams_25 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 25)

coef_mams_30 <-
    coef(m_linear_mams_30, summary = F)$Treatm_arm %>% 
    as_tibble()

t30 <- coef_mams_30 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 30)

coef_mams_42 <-
    coef(m_linear_mams_42, summary = F)$Treatm_arm %>% 
    as_tibble()

coefs_mams <- coef_mams_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 42) %>% 
  bind_rows(t30) %>% 
  bind_rows(t25) %>% 
  filter(str_detect(key, "weeks")) 

coefs_mams %>% 
  transmute(key, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval) %>% 
  rename(" " = key, "Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, #"CI width" = .width,
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  kable(digits = 3,
        caption = "(MAMS-TB) Posterior group-level estimates of slope from the 30- and 42-day models (95% Credible Intervals).") %>% 
  kable_styling(font_size = 16) %>% 
  pack_rows(group_label = "LOQ = 42", 
             start_row = 1,
             end_row = 5) %>% 
  pack_rows(group_label = "LOQ = 30",
             start_row = 6,
             end_row = 10) %>% 
  pack_rows(group_label = "LOQ = 25",
             start_row = 11,
             end_row = 15)
```

## REMoxTB: Linear (treatment level)

```{r}
coef_remox_25 <-
    coef(m_linear_remox_25, summary = F)$treat %>% 
    as_tibble()

t25 <- coef_remox_25 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 25)

coef_remox_30 <-
    coef(m_linear_remox_30, summary = F)$treat %>% 
    as_tibble()

t30 <- coef_remox_30 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 30)

coef_remox_42 <-
    coef(m_linear_remox_42, summary = F)$treat %>% 
    as_tibble()

coefs_remox <- coef_remox_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 42) %>% 
  bind_rows(t30) %>% 
  bind_rows(t25) %>% 
  filter(str_detect(key, "weeks")) 

coefs_remox %>% 
  transmute(key, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval) %>% 
  rename(" " = key, "Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, #"CI width" = .width, 
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  kable(digits = 3,
        caption = "(REMoxTB) Posterior group-level estimates of slope from the 30- and 42-day models.") %>% 
  kable_styling(font_size = 16) %>% 
  pack_rows(group_label = "LOQ = 42", 
             start_row = 1,
             end_row = 3) %>% 
  pack_rows(group_label = "LOQ = 30",
             start_row = 4,
             end_row = 6) %>% 
  pack_rows(group_label = "LOQ = 25",
             start_row = 7,
             end_row = 9)
```

## Forest plot

```{r}
bind_rows(mutate(coefs_mams, Data = "MAMS-TB"), 
          mutate(coefs_remox, Data = "REMoxTB")) %>% 
  mutate(key = str_remove(key, pattern = ".weeks")) %>% 
  mutate(key = str_remove(key, pattern = c("1. "))) %>%
  mutate(key = str_remove(key, pattern = c("2. "))) %>%
  mutate(key = str_remove(key, pattern = c("3. "))) %>%
  mutate(`Censoring limit` = paste0(LOQ, " days")) %>% 
  ggplot(aes(x = value, y = key, col = `Censoring limit`, shape = `Censoring limit`)) + 
  facet_grid(rows = vars(Data), scales = "free_y", space = "free_y") + 
  geom_errorbarh(aes(xmin = .lower, xmax = .upper),
                 position = position_dodge(width = 0.35),
                 height = 0.3) + 
  geom_point(position = position_dodge(width = 0.35),
             size = 2) +
  scale_color_manual(values = ucsf_col_pal[c(2,4,8)]) + 
  scale_x_continuous(breaks = seq(0.06,0.16,by = 0.02),
                     labels = seq(0.06,0.16,by = 0.02)) + 
  coord_cartesian(xlim = c(0.06,0.16)) + 
  theme(axis.title.y = element_blank(),
        legend.position = c(0.85,0.15)) + 
  labs(x = "Estimate (95% Credible Interval)")
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "publication", "forest-plot.tiff"),
       device = "tiff",
       units = "in",
       height = 4.5,
       width = 9)
```

```{r}
#| eval: false
library(brms)
conditions <- data.frame(Treatm_arm = unique(df_analysis_mams$Treatm_arm))
p1 <- conditional_effects(m_linear_mams_25, conditions = conditions,
                          re_formula = NULL, method = "predict", robust = TRUE)

plot(p1)
```

## Linear changes in estimates

```{r}
coefs_mams %>% 
  mutate(LOQ = c(rep(42, 5), rep(30,5), rep(25,5))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  summarise(point.estimate.ratio.30.42 = value[LOQ==30]/value[LOQ == 42],
            CI.width.ratio.30.42 = CI.width[LOQ==30]/CI.width[LOQ == 42],
            point.estimate.ratio.25.42 = value[LOQ==25]/value[LOQ == 42],
            CI.width.ratio.25.42 = CI.width[LOQ==25]/CI.width[LOQ == 42]) %>% 
  kable(digits = 4,
        caption = "(MAMS-TB) Change in point estimate and confidence interval width (30 days / 42 days).") %>% 
  kable_styling(font_size = 20)

coefs_remox %>% 
  # mutate(LOQ = c(rep(42, 3), rep(30,3), rep(25,3))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  summarise(point.estimate.ratio = value[LOQ == 30]/value[LOQ == 42],
            CI.width.ratio = CI.width[LOQ == 30]/CI.width[LOQ == 42]) %>% 
  kable(digits = 4,
        caption = "(REMoxTB) Change in point estimate and confidence interval width (30 days / 42 days).") %>% 
  kable_styling(font_size = 20)
```

## MAMS-TB: Biphasic (treatment level)

```{r}
load(here("data", "model-generated", "2023-08-02_biphasic-mams-lod-30.RData"))
load(here("data", "model-generated", "2023-08-02_biphasic-mams-lod-42.RData"))
```

```{r}
coef_mams_30 <-
    coef(m_nonlinear_mams_30, summary = F)$Treatm_arm %>% 
    as_tibble() 

t30 <- coef_mams_30 %>% 
  gather() %>%
  group_by(key) %>% #summarise(n = n())
  mode_qi(value) %>% # things get duplicated here.... (qi works, but not hdi?)
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 30)

coef_mams_42 <-
    coef(m_nonlinear_mams_42, summary = F)$Treatm_arm %>% 
    as_tibble()

coefs_mams_nl <- coef_mams_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_qi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>%  
  mutate(LOQ = 42) %>% 
  bind_rows(t30) %>% 
  filter(str_detect(key, "beta")) %>%
  separate(col = key,
           into = c("regimen", "coefficient"))

coefs_mams_nl %>% 
  transmute(regimen, coefficient, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval, LOQ) %>% 
  rename("Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, 
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  arrange(coefficient, regimen) %>% 
  kable(digits = 3,
        # escape = FALSE,
        caption = "(MAMS-TB) Posterior group-level estimates of slope from the 30- and 42-day models.") %>% 
  kable_styling(font_size = 14) %>% 
  pack_rows(group_label = "beta_1",
             start_row = 1,
             end_row = 10) %>%
  pack_rows(group_label = "beta_2",
             start_row = 11,
             end_row = 20)
```

## REMoxTB: Biphasic (treatment level)

```{r}
load(here("data", "model-generated", "2023-08-04_biphasic-remox-lod-30.RData"))
load(here("data", "model-generated", "2023-08-03_biphasic-remox-lod-42.RData"))
```

```{r}
coef_remox_30 <-
    coef(m_nonlinear_remox_30, summary = F)$treat %>% 
    as_tibble() 

t30 <- coef_remox_30 %>% 
  gather() %>%
  group_by(key) %>% #summarise(n = n())
  mode_qi(value) %>% # things get duplicated here.... (qi works, but not hdi?)
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 30)

coef_remox_42 <-
    coef(m_nonlinear_remox_42, summary = F)$treat %>% 
    as_tibble()

coefs_remox_nl <- coef_remox_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_qi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>%  
  mutate(LOQ = 42) %>% 
  bind_rows(t30) %>% 
  filter(str_detect(key, "beta")) %>%
  separate(col = key,
           into = c("nuis", "regimen", "regimen2", "coefficient")) %>% 
  mutate(regimen = paste0(regimen, "/", regimen2)) %>% 
  dplyr::select(-nuis, -regimen2)

coefs_remox_nl %>% 
  transmute(regimen, coefficient, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval, LOQ) %>% 
  rename("Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, 
         #"CI width" = .width, 
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  arrange(coefficient, regimen) %>% 
  kable(digits = 3,
        # escape = FALSE,
        caption = "(REMoxTB) Posterior group-level estimates of slope from the 30- and 42-day models.") %>% 
  kable_styling(font_size = 16) %>% 
  pack_rows(group_label = "beta_1",
             start_row = 1,
             end_row = 6) %>%
  pack_rows(group_label = "beta_2",
             start_row = 7,
             end_row = 12)
```

## ALL (visualization)

```{r}
mams_diff <- coefs_mams %>% 
  # mutate(LOQ = c(rep(42, 5), rep(30,5), rep(25,5))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  # Comparing each LOQ against 42
  summarise(LOQ, 
            point.estimate.ratio = value/value[LOQ == 42],
            CI.width.ratio = CI.width/CI.width[LOQ == 42]) %>% 
  mutate(coefficient = "gamma") %>% 
  # Removing reference (LOQ = 42)
  filter(LOQ != 42) %>% 
  mutate(data = "MAMS-TB")

mams_diff_nl <- coefs_mams_nl %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(regimen, coefficient) %>% 
  # Comparing each LOQ against 42
  summarise(LOQ, 
            point.estimate.ratio = value/value[LOQ == 42],
            CI.width.ratio = CI.width/CI.width[LOQ == 42]) %>% 
  # Removing reference (LOQ = 42)
  filter(LOQ != 42) %>% 
  mutate(data = "MAMS-TB (nl)")

remox_diff <- coefs_remox %>% 
  # mutate(LOQ = c(rep(42, 3), rep(30,3))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  # Comparing each LOQ against 42
  summarise(LOQ, 
            point.estimate.ratio = value/value[LOQ == 42],
            CI.width.ratio = CI.width/CI.width[LOQ == 42]) %>% 
  mutate(coefficient = "gamma") %>% 
  # Removing reference (LOQ = 42)
  filter(LOQ != 42) %>% 
  mutate(data = "REMoxTB")

remox_diff_nl <- coefs_remox_nl %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(regimen, coefficient) %>% 
  summarise(LOQ, 
            point.estimate.ratio = value/value[LOQ == 42],
            CI.width.ratio = CI.width/CI.width[LOQ == 42]) %>% 
   # Removing reference (LOQ = 42)
  filter(LOQ != 42) %>% 
  mutate(data = "REMoxTB (nl)")

bind_rows(rename(mams_diff, regimen = key), 
          rename(remox_diff, regimen = key),
          # mams_diff_nl,
          # remox_diff_nl
          ) %>% 
  mutate(`Censoring Limit (days)` = as.factor(LOQ),
         `Dataset` = # + Model` = 
           data) %>% 
  ggplot(aes(x = point.estimate.ratio, y = CI.width.ratio)) +
  # facet_wrap(~coefficient) +
  geom_hline(yintercept = 1, col = "black") + 
  geom_vline(xintercept = 1, col = "black") + 
  geom_point(alpha = 0.8,
             size = 3,
             aes(col = `Dataset`,# + Model`,
                 shape = `Censoring Limit (days)`)) +
  scale_shape_manual(values = c(16,4)) + 
  coord_fixed(ylim = c(0.7,1/0.7),
              xlim = c(0.7,1/0.7)) +
  scale_x_log10(breaks = c(0.1,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5,2,4,6)) + 
  scale_y_log10(breaks = c(0.1,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5,2,4,6)) +
  scale_color_manual(values = ucsf_col_pal[c(2,8,9)]) + 
  labs(x = TeX("$\\hat{\\theta}_{j, \\cdot} / \\hat{\\theta}_{j, 42}$"),
       y = "Ratio of 95% CI width relative to 42-day 95% CI width") +
  theme(axis.line = element_blank(),
        legend.position = c(0.8,0.2))
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "models", "05_point-plot_model-estimate-ratios.png"), 
       device = "png",
       height = 5,
       width = 6, 
       units = "in")

```

## Takeaway

For the REMoxTB and MAMS-TB data, point estimates in the 30-day models *decrease* relative to the 42-day models, as expected when "removing" data at the upper end of the spectrum.

However, credible intervals (e.g., precision) remain either the same or *improve* in the 30-day models relative to the 42-day models. In the REMoxTB data, the CIs improve more than the point estimates shrink. This is also true for 3 out of 5 arms in the MAMS-TB data.

# Differentiation of Regimens

## Motivation

We're not just interested in the estimation of TTP slopes. More importantly, we want to directly address whether improved estimation allows us to make "better" decisions, ideally earlier. Therefore, this section will look at the ability to differentiate "promising" regimens relative to control, where promising is assumed to mean those with *steeper changes in log10(TTP)* than control regimens.

```{r}
# Running the posterior distribution functions
df_42m <- relative_function_mams(m_linear_mams_42, loq = 42)
df_30m <- relative_function_mams(m_linear_mams_30, loq = 30)
df_25m <- relative_function_mams(m_linear_mams_25, loq = 25)
df_42r <- relative_function_remox(m_linear_remox_42, loq = 42)
df_30r <- relative_function_remox(m_linear_remox_30, loq = 30)
df_25r <- relative_function_remox(m_linear_remox_25, loq = 25)
```

## MAMS

```{r}
mams_differentiation <- bind_rows(mutate(df_42m$output, LOQ = "42 days"),
                                  mutate(df_30m$output, LOQ = "30 days"),
                                  mutate(df_25m$output, LOQ = "25 days")) 
mams_differentiation %>% 
  pivot_wider(names_from = LOQ, 
              values_from = posterior.prob) %>% 
  ggplot(aes(x = `Percent Change`)) + 
  facet_wrap(~regimen) +
  geom_line(aes(y = `42 days`,
                col = "42 days")) +
  geom_line(aes(y = `30 days`,
                col = "30 days")) +
  geom_line(aes(y = `25 days`,
                col = "25 days")) +
  # geom_segment(aes(xend = `Percent Change`, y = `42 days`, yend = `30 days`)) + 
  # geom_segment(aes(xend = `Percent Change`, y = `42 days`, yend = `25 days`)) + 
  # geom_point(aes(y = `42 days`,
  #                col = "42 days"),
  #            alpha = 0.6) +
  # geom_point(aes(y = `30 days`,
  #                col = "30 days"),
  #            alpha = 0.6) +
  # geom_point(aes(y = `25 days`,
  #                col = "25 days"),
  #            alpha = 0.6) +
  labs(y = TeX("Pr(\\theta \\geq x)"),
       x = "x, Relative change in log10(TTP) slope as compared to HRZE",
       title = "Study: MAMS-TB",
       color = "LOQ") + 
  scale_color_manual(values = ucsf_col_pal[c(2,8,9)]) + 
  theme(legend.position = "bottom")
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "publication", "MAMS_differentiation-regimens.png"),
       device = "png",
       units = "in",
       height = 7,
       width = 14)

```

```{r}
mams_differentiation %>% 
  group_by(regimen, percent.change) %>% 
  mutate(which.limit.best = max(posterior.prob)) %>% 
  mutate(which.LOQ.best = LOQ[which.limit.best==posterior.prob]) %>% 
  group_by(which.LOQ.best) %>% 
  # group_by(`Percent Change`,regimen, which.LOQ.best) %>% 
  summarise(n())

mams_differentiation %>% 
  filter(`Percent Change` == 0) %>% 
  group_by(regimen) %>% 
  mutate(which.limit.best = max(posterior.prob)) %>% 
  mutate(which.LOQ.best = LOQ[which.limit.best==posterior.prob]) %>% 
  group_by(which.LOQ.best) %>% 
  # group_by(`Percent Change`,regimen, which.LOQ.best) %>% 
  summarise(n())
```

## Takeaway

For the MAMS-TB data, using a 30-day limit of quantification improves the ability to differentiate regimens relative to the control. The estimated posterior probability (e.g., "confidence") that a given regimen's rate of change is as steep or steeper than then the control regimen's rate of change is best for nearly all regimens with a 30- rather than 42-day limit of quantification.

## REMoxTb

```{r}
remox_differentiation <- bind_rows(mutate(df_42r$output, LOQ = "42 days"),
                                   mutate(df_30r$output, LOQ = "30 days"),
                                   mutate(df_25r$output, LOQ = "25 days")) 

remox_differentiation %>% 
   # pivot_wider(names_from = LOQ, 
   #            values_from = posterior.prob) %>% 
  dplyr::select(-percent.change) %>% 
  ggplot(aes(x = LOQ, y = `Percent Change`, fill = posterior.prob)) + 
  facet_wrap(~regimen) + 
  geom_tile() + 
  geom_text(aes(label = round(posterior.prob,3)),
            col = "white") +
  scale_fill_gradient(low = "darkgray",
                      high = "darkgreen")
```

```{r}
#| eval: false
remox_differentiation %>% 
  group_by(regimen, percent.change) %>% 
  mutate(which.limit.best = max(posterior.prob)) %>% 
  mutate(which.LOQ.best = LOQ[which.limit.best==posterior.prob]) %>% 
  group_by(which.LOQ.best) %>% 
  summarise(n())

remox_differentiation %>% 
  filter(`Percent Change` == 0) %>% 
  group_by(regimen) %>% 
  mutate(which.limit.best = max(posterior.prob)) %>% 
  mutate(which.LOQ.best = LOQ[which.limit.best==posterior.prob]) %>% 
  group_by(which.LOQ.best) %>% 
  # group_by(`Percent Change`,regimen, which.LOQ.best) %>% 
  summarise(n())
```

```{r}
remox_differentiation %>% 
  pivot_wider(names_from = LOQ, 
              values_from = posterior.prob) %>% 
  ggplot(aes(x = `Percent Change`)) + 
  facet_wrap(~regimen,
             ncol = 1) +
    geom_line(aes(y = `42 days`,
                col = "42 days")) +
  geom_line(aes(y = `30 days`,
                col = "30 days")) +
  geom_line(aes(y = `25 days`,
                col = "25 days")) +
  # geom_segment(aes(xend = `Percent Change`, y = `42 days`, yend = `30 days`)) + 
  # geom_point(aes(y = `42 days`,
  #                col = "42 days")) +
  # geom_point(aes(y = `30 days`,
  #                col = "30 days")) +
  labs(y = TeX("Pr(\\theta \\geq x)"),
       x = "x, Relative change in log10(TTP) slope as compared to HRZE",
       color = "LOQ",
       title = "Study: REMoxTB") + 
  scale_color_manual(values = ucsf_col_pal[c(2,8,9)]) + 
  theme(legend.position = "bottom")
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "publication", "REMOX-differentiation-regimens.png"),
       device = "png",
       units = "in",
       height = 7,
       width = 14)
```

## Takeaway

The same trend as was observed in MAMS is not observed in the REMoxTB data, which is perplexing. The 42-day limit of quantification is observed to correlate with a stronger posterior probability of differentiation between the novel regimens and the control (HRZE).

Should we be doing more of a grid-search or can we motivate this better with a S-N exploration first?

# Signal-to-Noise 

```{r}
load(here("data", "cleaned-data", "2023-12-14_replicate-datasets.RData"))
list2env(df_replicates, environment())
```

## Replicates (MAMS-TB)

```{r}
p0 <- df_mams_replicates %>% 
  ggplot(aes(x = rep1, y = rep2, col = (rep1 >= 42 | rep2 >= 42))) +  
  geom_abline(slope = 1, intercept = 0, lty = 1, col = "red") +
  geom_point(alpha = 0.4) + 
  scale_color_manual("Above diagnostic LOD = 42", values = c("black", "orange")) + 
  scale_x_log10(TeX("TTP$_1$, log10 scale"),
                breaks = c(1,3,10,25,30,42)) + 
  scale_y_log10(TeX("TTP$_2$, log10 scale"),
                breaks = c(1,3,10,25,30,42)) + 
  coord_fixed(xlim = c(1,60),
              ylim = c(1,60)) + 
  labs(title = "Study: MAMS-TB", subtitle = "Replicates") + 
  theme(legend.position = "bottom")

p0
```

```{r}
df_mams_replicates %>% ggplot(aes(x = weeks)) +
  geom_point(aes(y = rep1), col = "red", position = position_jitter(width = 0.2, height = 0)) +
  geom_point(aes(y = rep2), col = "black", position = position_jitter(width = 0.2, height = 0)) 

```

## Replicates (NC-002) {.scrollable}

```{r}
#| fig-width: 10
#| fig-height: 10
p1 <- df_NC_002_replicates %>% 
  filter(rep1 <= 42 & rep2 <= 42) %>% # removing the oddly coded rep = 60
  ggplot(aes(x = rep1, y = rep2, col = (rep1 >= 42 | rep2 >= 42))) +  
  geom_abline(slope = 1, intercept = 0, lty = 1, col = "red") +
  geom_point(alpha = 0.4) + 
  scale_color_manual("Above diagnostic LOD = 42", values = c("black", "orange")) + 
  scale_x_log10(TeX("TTP$_1$, log10 scale"),
                breaks = c(1,3,10,25,30,42)) + 
  scale_y_log10(TeX("TTP$_2$, log10 scale"),
                breaks = c(1,3,10,25,30,42)) + 
  coord_fixed(xlim = c(1,42),
              ylim = c(1,42)) + 
  labs(title = "Study: NC-002 (M-Pa-Z)") + #, subtitle = "Replicates") + 
  theme(legend.position = "bottom")

# p0 + 
  p1 #+
  # plot_annotation(tag_levels = "A") #+ coord_cartesian(xlim = c(10,20), ylim = c(10,20))
# library(ggExtra)
# ggMarginal(p1, groupColour = TRUE, groupFill = TRUE)
```


```{r}
#| eval: false
ggsave(filename = here("graphs", "publication", "NC-002_replicate-point-plot.png"),
       device = "png",
       units = "in",
       height = 6,
       width = 6)
```

Overall correlation within replicates: `r round(cor(df_NC_002_replicates$rep1,df_NC_002_replicates$rep2), 4)`

```{r}
# df_NC_002_replicates %>% 
#   ungroup() %>% 
#   mutate(cor5 = cor(rep1[rep1<=5], rep2[rep1<=5]),
#          cor5_10 = cor(rep1[between(rep1,5,10)], rep2[between(rep1,5,10)]),
#          cor10_15 = cor(rep1[between(rep1,10,15)], rep2[between(rep1,10,15)]),
#          cor15_20 = cor(rep1[between(rep1,15,20)], rep2[between(rep1,15,20)]),
#          cor20_25 = cor(rep1[between(rep1,20,25)], rep2[between(rep1,20,25)]),
#          cor25_30 = cor(rep1[between(rep1,25,30)], rep2[between(rep1,25,30)]),
#          cor30_35 = cor(rep1[between(rep1,30,35)], rep2[between(rep1,30,35)]),
#          cor35_42 = cor(rep1[between(rep1,35,42)], rep2[between(rep1,35,42)]))
# Pairwise purity
p1 <- df_NC_002_replicates %>% 
  mutate(resid = abs(rep1 - rep2)) %>% 
  ggplot(aes(x = rep1, y = resid)) + 
  geom_point(alpha = 0.4) + 
  scale_x_log10() + 
  labs(y ="Absolute difference in replicates",
       x = TeX("TTP$_1$")) + 
  coord_cartesian(xlim = c(1,42))
p2 <- df_NC_002_replicates %>% 
  mutate(resid = abs(rep1 - rep2)) %>% 
  ggplot(aes(x = rep2, y = resid)) + 
  geom_point(alpha = 0.4) + 
  scale_x_log10() +
  labs(y ="Absolute difference in replicates",
       x = TeX("TTP$_2$")) +
  coord_cartesian(xlim = c(1,42))
p1 / p2

m1 <- lm(log10(rep1) ~ log10(rep2), data = df_NC_002_replicates)
plot(m1)
```

```{r}
p1 + 
  geom_segment(aes(x = 10, xend = 10, y = 0, yend = 10), lty = 3, col = "darkgray") +
  # geom_segment(aes(x = 0, xend = 10, y = 10, yend = 10), lty = 3, col = "darkgray") +
  geom_segment(aes(x = 25, xend = 25, y = 0, yend = 25), lty = 3, col = "darkgray") +
  # geom_segment(aes(x = 0, xend = 25, y = 25, yend = 25), lty = 3, col = "darkgray") +
  geom_segment(aes(x = 42, xend = 42, y = 0, yend = 42), lty = 3, col = "darkgray") 
  # geom_segment(aes(x = 0, xend = 42, y = 42, yend = 42), lty = 3, col = "darkgray") 

```

## Replicates (NC-005) {.scrollable}

```{r}
#| fig-width: 10
#| fig-height: 10
#| eval: false

# NOT QUITE RIGHT - NEED TO SORT OUT REMAINING PROBLEMS WITH IDENTIFYING WHICH PARTICIPANTS HAD NEGATIVE SAMPLES AND WHICH HAD INCONCLUSIVE SAMPLES
p1 <- df_NC_005 %>% 
  # Smaller dataset to work with
  dplyr::select(USUBJID, MBDY, MBSTRESN, MBSTRESC, ACTARM) %>% 
  distinct() %>% 
  # Taking the first 8 weeks of observation
  filter(MBDY <= 7*8 & MBDY >= 0) %>% 
  # Setting NA values to 42 for plotting purposes
  mutate(dtp_42 = ifelse(is.na(MBSTRESN) & MBSTRESC == "NEGATIVE", 42, MBSTRESN)) %>% #,
         # censored_42 = ifelse(is.na(MBSTRESN), "right", "none")) %>% 
  dplyr::select(-MBSTRESN, -MBSTRESC) %>% 
  # Identify replicates
  group_by(USUBJID, MBDY) %>% 
  mutate(replicate = row_number()) %>% 
  pivot_wider(values_from = dtp_42,
              names_from = replicate) %>% 
  # Keep replicates only (no singlets)
  filter(!is.na(`1`) & !is.na(`2`)) %>% 
  ggplot(aes(x = `1`, y = `2`, col = (`1` >= 42 | `2` >= 42))) +  
  geom_abline(slope = 1, intercept = 0, lty = 1, col = "red") +
  geom_point(alpha = 0.4) + 
  scale_color_manual("Above LOD = 42", values = c("black", "orange")) + 
  scale_x_log10(TeX("TTP$_1$, log10 scale"),
                breaks = c(1,3,10,25,30,42)) + 
  scale_y_log10(TeX("TTP$_2$, log10 scale"),
                breaks = c(1,3,10,25,30,42)) + 
  coord_fixed(xlim = c(1,42),
              ylim = c(1,42)) + 
  labs(title = "Study NC-002", subtitle = "Replicates") + 
  theme(legend.position = "bottom")

p1
# library(ggExtra)
# ggMarginal(p1, groupColour = TRUE, groupFill = TRUE)
```


```{r}
#| eval: false
ggsave(filename = here("graphs", "publication", "NC-005_replicate-point-plot.png"),
       device = "png",
       units = "in",
       height = 7,
       width = 7)
```

## Replicates over time (NC-002)

Not super satisfied with this plot, but I do like that it seems to confirm that the deviance in replicates increases as the expected value of TTP increases (e.g., with time).

```{r}
df_NC_002 %>% 
  # Smaller dataset to work with
  dplyr::select(USUBJID, MBDY, MBSTRESN, ACTARM) %>% 
  distinct() %>% 
  # Taking the first 8 weeks of observation
  filter(MBDY <= 7*8 & MBDY >= 0) %>% 
  # Setting NA values to 42 for plotting purposes
  mutate(dtp_42 = ifelse(is.na(MBSTRESN), 42, MBSTRESN)) %>% #,
         # censored_42 = ifelse(is.na(MBSTRESN), "right", "none")) %>% 
  dplyr::select(-MBSTRESN) %>% 
  # Identify replicates
  group_by(USUBJID, MBDY) %>% 
  mutate(replicate = row_number()) %>% 
  pivot_wider(values_from = dtp_42,
              names_from = replicate) %>% 
  # Keep replicates only (no singlets)
  filter(!is.na(`1`) & !is.na(`2`)) %>% 
  # Calculating absolute difference in measurement (or ratio?)
  mutate(abs_diff = abs(`1` - `2`)) %>% 
  ggplot(aes(x = MBDY, y = abs_diff)) + 
  geom_hline(yintercept = 0,
             col = "red") +
  geom_point(alpha = 0.5) +
  # geom_violin(aes(group = ceiling(MBDY/7))) +
  geom_smooth() +
  labs(x = "Days since randomization", y = TeX("| TTP$_1$ - TTP$_2$ |"),
       title = "NC-002", subtitle = "Replicates") + 
  scale_x_continuous(breaks = seq(0,56,by = 7)) 
```

## K-Fold Prediction Error {.scrollable}

Using cross-validation to train and test our ability to predict TTP based on one of the observed replicates. 

```{r}
kfold_function <- function(df, k){
  df$k_assignment <- sample(1:k, size = nrow(df), replace = TRUE)
  
  map_dfr(as.list(1:k), 
          ~t_function(df, 
                      kspec = .x))
}

t_function <- function(df, kspec){
  train <- df %>% 
    filter(k_assignment != kspec)
  test <- df %>% 
    filter(k_assignment == kspec)
  
  mtemp <- train %>% 
    # Predict rep2 as a function of rep1
    lm(log10(rep2) ~ log10(rep1), 
       data = .)
  
  test$rep2.hat <- predict(mtemp, newdata = test)
  return(test)
}

prediction_nc <- kfold_function(filter(ungroup(df_NC_002_replicates), rep1 < 42), k = 5)

p2 <- prediction_nc %>% 
  filter(rep2 <= 42 & rep1 <= 42) %>% 
  ungroup() %>% 
  mutate(pred.error = 100*(abs(rep2 - 10^rep2.hat)/rep2)) %>% 
  arrange(rep1) %>% arrange(rep1) %>% 
  group_by(cats_rep1 = cut(rep1, 
                           breaks = quantile(rep1, probs = seq(0,1,by=0.1)),
                           include.lowest = TRUE)) %>% 
  mutate(mean_cat_error_10 = mean(pred.error)) %>% 
  mutate(over.lim.pred.error = ifelse(pred.error > 100, 100, pred.error),
         over.lim.detect = ifelse(pred.error >100, TRUE, FALSE)) %>% 
  group_by(cats_rep1 = cut(rep1, breaks = quantile(rep1, probs = seq(0,1,by=0.05)))) %>% 
  mutate(mean_cat_error_20 = mean(pred.error)) %>% 
  ggplot(aes(x = rep1, y = over.lim.pred.error)) + 
  geom_point(alpha = 0.2,
             aes(shape = over.lim.detect,
                 col = over.lim.detect))+#,
             # col = ucsf_col_pal[3]) +
  geom_smooth(se = FALSE,
              lwd = 1,
              lty = 2,
              col = "black") +
  geom_line(aes(y = mean_cat_error_10),
            col = ucsf_col_pal[3],
            lwd = 1) +
  # coord_cartesian(xlim = c(1,120),ylim = c(0,100)) +
  coord_cartesian(xlim = c(1,42),ylim = c(0,100)) +
  scale_x_log10(breaks = c(1,3, 10, 25, 30, 42)) +
  scale_y_continuous(breaks = c(seq(0,100,by = 10), 150,200),
                     expand = c(0,0.75)) +
  scale_color_manual(values = c(ucsf_col_pal[c(3,7)])) +
  theme(legend.position = "none") + 
  # annotate(geom = "text",
  #          x = 42, 
  #          y = 20,
  #          hjust = -0.1,
  #          label = TeX("Mean %PE\nwithin deciles of $TTP_1$"),
  #          col = ucsf_col_pal[3]) +
  labs(x = TeX("TTP$_1$, log10 scale"),
       y = TeX("Absolute Prediction Error (%): $100\\times \\frac{| TTP_2 - \\widehat{TTP}_2 |}{TTP_2}"),
       # subtitle = "5-fold CV",
       title = "Study: NC-002 (M-Pa-Z)") 
```

```{r}
#| eval: false
ggsave(here("graphs", "publication", "NC-002_replicate-prediction-plot.png"),
       device = "png",
       width = 9,
       height = 4.75,
       units = "in")
```

```{r}
(p1 + theme(legend.position = "none",plot.title = element_blank())) + 
  (p2 + theme(plot.title = element_blank())) +
  plot_layout(widths = c(1,1.65),
              height = 1) + 
  plot_annotation(tag_levels = "A")
```

```{r}
#| eval: false
ggsave(here("graphs", "publication", "NC-002_replicates_point-AND-prediction.png"),
       device = "png",
       width = 14,
       height = 5.5,
       units = "in")
```

## Average Absolute Prediction Error Tables {.scrollable}

```{r}
prediction_nc %>% 
  filter(rep2 <= 42 & rep1 <= 42) %>% 
  ungroup() %>% 
  mutate(pred.error = 100*(abs(rep2 - 10^rep2.hat)/rep2)) %>% 
  arrange(rep1) %>% arrange(rep1) %>% 
  group_by(cats_rep1 = cut(rep1, 
                           breaks = quantile(rep1, probs = seq(0,1,by=0.1)),
                           include.lowest = TRUE)) %>% 
  mutate(mean_cat_error_10 = mean(pred.error)) %>% 
  mutate(over.lim.pred.error = ifelse(pred.error > 100, 100, pred.error),
         over.lim.detect = ifelse(pred.error >100, TRUE, FALSE)) %>% 
  group_by(cats_rep1 = cut(rep1, 
                           breaks = quantile(rep1, probs = seq(0,1,by=0.05)),
                           include.lowest = TRUE)) %>% 
  mutate(mean_cat_error_20 = mean(pred.error)) %>%
  dplyr::select(cats_rep1, mean_cat_error_10, mean_cat_error_20) %>% 
  distinct() %>% 
  mutate(mean_cat_error_10 = cell_spec(format(round(mean_cat_error_10,2),nsmall=2), color = ifelse(mean_cat_error_10 > 15, "red", "black")),
         mean_cat_error_20 = cell_spec(format(round(mean_cat_error_20,2),nsmall=2), color = ifelse(mean_cat_error_20 > 15, "red", "black"))) %>% 
  rename(`Mean PE (%), deciles` = mean_cat_error_10,
         `Mean PE (%), 20 quantiles` = mean_cat_error_20) %>% 
  kable(escape = FALSE)  %>% 
  kable_styling() 

p1 + p2
```

```{r}
m_loess <- prediction_nc %>% 
  filter(rep2 <= 42 & rep1 <= 42) %>% 
  ungroup() %>% 
  mutate(pred.error = 100*(abs(rep2 - 10^rep2.hat)/rep2)) %>% 
  loess(formula = pred.error ~ rep1)
data.frame(ttp1 = 2:40) %>% 
  mutate(mean.pred.error.loess = predict(m_loess,
                                         newdata = ttp1)) %>% 
  mutate(mean.pred.error.loess = cell_spec(format(round(mean.pred.error.loess,2),nsmall=2), color = ifelse(mean.pred.error.loess > 15, "red", "black"))) %>% 
  rename(`Mean PE (%), loess` = mean.pred.error.loess) %>% 
  kable(escape = FALSE)  %>% 
  kable_styling() 
```

# Sensitivity Analyses

```{r}
# Update with new model objects with saved group parameter estimates
load(here("data", "model-generated", "2023-08-31_linear-mams-lod-42_sensitivity.RData"))
load(here("data", "model-generated", "2023-08-31_linear-mams-lod-30_sensitivity.RData"))
load(here("data", "model-generated", "2023-08-31_linear-mams-lod-25_sensitivity.RData"))
load(here("data", "model-generated", "2023-08-31_linear-remox-lod-42_sensitivity.RData"))
load(here("data", "model-generated", "2023-08-31_linear-remox-lod-30_sensitivity.RData"))
load(here("data", "model-generated", "2023-08-31_linear-remox-lod-25_sensitivity.RData"))
```

## MAMS-TB: Linear

```{r}
coef_mams_25s <-
    coef(m_linear_mams_25s, summary = F)$Treatm_arm %>% 
    as_tibble()

t25 <- coef_mams_25s %>%
  gather() %>%
  group_by(key) %>%
  mode_hdi(value) %>%
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 25)

coef_mams_30s <-
    coef(m_linear_mams_30s, summary = F)$Treatm_arm %>%
    as_tibble()

t30 <- coef_mams_30s %>%
  gather() %>%
  group_by(key) %>%
  mode_hdi(value) %>%
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 30)

coef_mams_42s <-
    coef(m_linear_mams_42s, summary = F)$Treatm_arm %>%
    as_tibble()

coefs_mams <- coef_mams_42s %>%
  gather() %>%
  group_by(key) %>%
  mode_hdi(value) %>%
  mutate_if(is.double, round, digits = 3) %>%
  mutate(LOQ = 42) %>% 
  bind_rows(t30) %>%
  bind_rows(t25) %>%
  filter(str_detect(key, "weeks")) 

coefs_mams %>%
  transmute(key, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval) %>%
  rename(" " = key, "Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, #"CI width" = .width,
         "Point Estimation" = .point, "CI Estimation" = .interval) %>%
  kable(digits = 3,
        caption = "(MAMS-TB) Posterior group-level estimates of slope from the 30- and 42-day models (95% Credible Intervals).") %>%
  kable_styling(font_size = 16) %>%
  pack_rows(group_label = "LOQ = 42",
             start_row = 1,
             end_row = 5) %>%
  pack_rows(group_label = "LOQ = 30",
             start_row = 6,
             end_row = 10) %>%
  pack_rows(group_label = "LOQ = 25",
             start_row = 11,
             end_row = 15)
```

## REMoxTB: Linear

```{r}
coef_remox_25s <-
    coef(m_linear_remox_25s, summary = F)$treat %>% 
    as_tibble()

t25 <- coef_remox_25s %>%
  gather() %>%
  group_by(key) %>%
  mode_hdi(value) %>%
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 25)

coef_remox_30s <-
    coef(m_linear_remox_30s, summary = F)$treat %>%
    as_tibble()

t30 <- coef_remox_30s %>%
  gather() %>%
  group_by(key) %>%
  mode_hdi(value) %>%
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(LOQ = 30)

coef_remox_42s <-
    coef(m_linear_remox_42s, summary = F)$treat %>%
    as_tibble()

coefs_remox <- coef_remox_42s %>%
  gather() %>%
  group_by(key) %>%
  mode_hdi(value) %>%
  mutate_if(is.double, round, digits = 3) %>%
  mutate(LOQ = 42) %>% 
  bind_rows(t30) %>%
  bind_rows(t25) %>%
  filter(str_detect(key, "weeks"))

coefs_remox %>%
  transmute(key, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval) %>%
  rename(" " = key, "Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, #"CI width" = .width,
         "Point Estimation" = .point, "CI Estimation" = .interval) %>%
  kable(digits = 3,
        caption = "(REMoxTB) Posterior group-level estimates of slope from the 30- and 42-day models (95% Credible Intervals).") %>%
  kable_styling(font_size = 16) %>%
  pack_rows(group_label = "LOQ = 42",
             start_row = 1,
             end_row = 3) %>%
  pack_rows(group_label = "LOQ = 30",
             start_row = 4,
             end_row = 6) %>%
  pack_rows(group_label = "LOQ = 25",
             start_row = 7,
             end_row = 9)
```

## Forest plot

```{r}
bind_rows(mutate(coefs_mams, Data = "MAMS-TB"), 
          mutate(coefs_remox, Data = "REMoxTB")) %>% 
  mutate(key = str_remove(key, pattern = ".weeks")) %>% 
  mutate(key = str_remove(key, pattern = c("1. "))) %>%
  mutate(key = str_remove(key, pattern = c("2. "))) %>%
  mutate(key = str_remove(key, pattern = c("3. "))) %>%
  mutate(`Censoring limit` = paste0(LOQ, " days")) %>% 
  ggplot(aes(x = value, y = key, col = `Censoring limit`, shape = `Censoring limit`)) + 
  facet_grid(rows = vars(Data), scales = "free_y", space = "free_y") + 
  geom_errorbarh(aes(xmin = .lower, xmax = .upper),
                 position = position_dodge(width = 0.35),
                 height = 0.3) + 
  geom_point(position = position_dodge(width = 0.35),
             size = 2) +
  scale_color_manual(values = ucsf_col_pal[c(2,4,8)]) + 
  scale_x_continuous(breaks = seq(0.06,0.16,by = 0.02),
                     labels = seq(0.06,0.16,by = 0.02)) + 
  coord_cartesian(xlim = c(0.06,0.16)) + 
  theme(axis.title.y = element_blank(),
        legend.position = c(0.85,0.15)) + 
  labs(x = "Estimate (95% Credible Interval)")
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "publication", "forest-plot_sensitivity.tiff"),
       device = "tiff",
       units = "in",
       height = 4.5,
       width = 9)
```

## Visualization (ALL)

```{r}
#| fig-width: 10
#| fig-height: 10
mams_diff_s <- coefs_mams %>% 
  # mutate(LOQ = c(rep(42, 5), rep(30,5), rep(25,5))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  # Comparing each LOQ against 42
  summarise(LOQ, 
            point.estimate.ratio = value/value[LOQ == 42],
            CI.width.ratio = CI.width/CI.width[LOQ == 42]) %>% 
  mutate(coefficient = "gamma") %>% 
  # Removing reference (LOQ = 42)
  filter(LOQ != 42) %>% 
  mutate(data = "MAMS-TB (excluding baseline TTP)")

remox_diff_s <- coefs_remox %>% 
  # mutate(LOQ = c(rep(42, 3), rep(30,3))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  # Comparing each LOQ against 42
  summarise(LOQ, 
            point.estimate.ratio = value/value[LOQ == 42],
            CI.width.ratio = CI.width/CI.width[LOQ == 42]) %>% 
  mutate(coefficient = "gamma") %>% 
  # Removing reference (LOQ = 42)
  filter(LOQ != 42) %>% 
  mutate(data = "REMoxTB (excluding baseline TTP)")

bind_rows(rename(mams_diff, regimen = key),
          rename(remox_diff,regimen = key),
          rename(mams_diff_s, regimen = key),
          rename(remox_diff_s,regimen = key),
          # mams_diff_nl,
          # remox_diff_nl
          ) %>% 
  mutate(`Censoring Limit (days)` = as.factor(LOQ),
         `Dataset` = # + Model` = 
           data) %>% 
  ggplot(aes(x = point.estimate.ratio, y = CI.width.ratio)) +
  # facet_wrap(~coefficient) +
  geom_hline(yintercept = 1, col = "black") + 
  geom_vline(xintercept = 1, col = "black") + 
  geom_point(alpha = 0.8,
             size = 3,
             aes(col = `Dataset`,# + Model`,
                 shape = `Censoring Limit (days)`)) +
  scale_shape_manual(values = c(16,4)) + 
  coord_fixed(ylim = c(0.7,1/0.7),
              xlim = c(0.7,1/0.7)) +
  scale_x_log10(breaks = c(0.1,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5,2,4,6)) + 
  scale_y_log10(breaks = c(0.1,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5,2,4,6)) +
  scale_color_manual(values = ucsf_col_pal[c(2,5,8,9)]) + 
  labs(x = TeX("$\\hat{\\gamma}_{1j, \\cdot} / \\hat{\\gamma}_{1j, 42}$"),
       y = "Ratio of 95% CI width relative to 42-day 95% CI width") +
  theme(axis.line = element_blank(),
        legend.position = c(0.8,0.25))
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "publication",
                       paste0("point-plot_all-ratios.tiff")),
       device = "tiff",
       height = 6.75,
       width = 6.75,
       units = "in")
```

# Model Convergence - MAMS-TB

## MAMS-TB: Linear 25-day {.scrollable}

```{r}
m_linear_mams_25
```

## MAMS-TB: Linear 25-day posterior {.scrollable}

```{r}
plot(m_linear_mams_25, ask = FALSE)
```

## MAMS-TB: Linear 30-day {.scrollable}

```{r}
m_linear_mams_30
```

## MAMS-TB: Linear 30-day posterior {.scrollable}

```{r}
plot(m_linear_mams_30, ask = FALSE)
```

## MAMS-TB: Linear 42-day {.scrollable}

```{r}
m_linear_mams_42
```

## MAMS-TB: Linear 42-day posterior {.scrollable}

```{r}
plot(m_linear_mams_42, ask = FALSE)
```

## MAMS-TB: Nonlinear 25-day {.scrollable}

```{r}
#| eval: false
m_nonlinear_mams_25
```

## MAMS-TB: Nonlinear 25-day posterior {.scrollable}

```{r}
#| eval: false
m_nonlinear_mams_25
plot(m_nonlinear_mams_25, ask = FALSE)
```

## MAMS-TB: Nonlinear 30-day {.scrollable}

```{r}
m_nonlinear_mams_30
```

## MAMS-TB: Nonlinear 30-day posterior {.scrollable}

```{r}
plot(m_nonlinear_mams_30, ask = FALSE)
```

## MAMS-TB: Nonlinear 42-day {.scrollable}

```{r}
m_nonlinear_mams_42
```

## MAMS-TB: Nonlinear 42-day posterior {.scrollable}

```{r}
plot(m_nonlinear_mams_42, ask = FALSE)
```

# Model Convergence - REMoxTB

## REMoxTB: Linear 25-day {.scrollable}

<!-- ```{r} -->

<!-- m_linear_remox_25 -->

<!-- ``` -->

## REMoxTB: Linear 25-day posterior {.scrollable}

<!-- # ```{r} -->

<!-- # plot(m_linear_remox_25, ask = FALSE) -->

<!-- # ``` -->

## REMoxTB: Linear 30-day {.scrollable}

```{r}
m_linear_remox_30
```

## REMoxTB: Linear 30-day posterior {.scrollable}

```{r}
plot(m_linear_remox_30, ask = FALSE)
```

## REMoxTB: Linear 42-day {.scrollable}

```{r}
m_linear_remox_42
```

## REMoxTB: Linear 42-day posterior {.scrollable}

```{r}
plot(m_linear_remox_42, ask = FALSE)
```

## REMoxTB: Nonlinear 25-day {.scrollable}

<!-- ```{r} -->

<!-- m_nonlinear_remox_25 -->

<!-- ``` -->

## REMoxTB: Nonlinear 25-day posterior {.scrollable}

<!-- ```{r} -->

<!-- plot(m_nonlinear_remox_25, ask = FALSE) -->

<!-- ``` -->

## REMoxTB: Nonlinear 30-day {.scrollable}

```{r}
m_nonlinear_remox_30
```

## REMoxTB: Nonlinear 30-day posterior {.scrollable}

```{r}
plot(m_nonlinear_remox_30, ask = FALSE)
```

## REMoxTB: Nonlinear 42-day {.scrollable}

```{r}
m_nonlinear_remox_42
```

## REMoxTB: Nonlinear 42-day posterior {.scrollable}

```{r}
plot(m_nonlinear_remox_42, ask = FALSE)
```
