---
title: "TTP Limit of Detection"
author: "Suzanne Dufault"
format: 
  revealjs:
    self-contained: true
    self-contained-math: true
editor: visual
execute:
  echo: false
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(here)
library(kableExtra)
library(knitr)
library(patchwork)
library(latex2exp)
library(ggalluvial)
library(tidybayes)

source(here("lib", "ucsf-color-palette.R"))
load(here("data", "cleaned-data", "2023-07-31_remoxtb-clean.RData"))
load(here("data", "cleaned-data", "2023-07-31_mams-clean.RData"))
theme_set(ggpubr::theme_pubr())
```

# General

## Overview (1/2)

-   BACTEC MGIT machine is the standard approach globally for detecting viable bacilli in a patient's sputum.
    -   Measures the decline of oxygen in a liquid culture tube inoculated with the sputum sample.
    -   Introduced during a major diagnostic development push at the end of the 1980s/early 1990s.
-   Samples observed no longer than 42 days, at which point the sample is declared \`\`negative'' for TB with no evidence for bacterial growth.

::: notes
I think the historical impact of the development of the BACTEC MGIT machine is super interesting!
:::

## Overview (2/2)

In practice, **very few samples return MGIT time-to-positivity values between 30 and 42 days**. While this range may be important for individual *diagnostic* purposes, the TTP values captured in this range may not contribute meaningfully to understanding the relative TTP trajectories at the regimen-level. We investigate whether using a lower limit of detection for longitudinal time-to-positivity modeling will improve precision for detecting differences between treatments, resulting in shorter trial times and improved power for performing regimen selection.

## Objective

Our objective is to examine existing TTP data from various case studies to better define the trajectory and variance of regimen-level TTP over time, while examining the impact of alternate limits of detection on power.

## Datasets

-   REMoxTB

-   PanACEA MAMS-TB

## REMoxTB

We will restrict to only those with:

-   `result = 0,1,2` (i.e., only those with a Negative (0), Positive (1), or Unconfirmed Positive (2) result)
-   `bact = 1` (i.e., MGIT)
-   `weeks <= 8` (i.e., only looking at observations within 8 weeks of randomization)
-   `!box_mitt %in% c(10,20,30)` excluding those with late screening failures

## MAMS

We restrict to those with:

-   `WEEK <= 8` (i.e., only looking at observations within 8 weeks of randomization)

-   `!is.na(DV)` (i.e., only those with an observed time to positivity)

## Methods - Models

```{r}
complex_biphasic_trend <- function(weeks, alpha, beta1, beta2, kappa, gamma){
  alpha + beta1 * weeks + beta2 * gamma * log((exp((weeks - kappa)/gamma) + exp(-(weeks - kappa)/gamma))/(exp(kappa/gamma) + exp(-kappa/gamma))) 
}

data.frame(t = seq(0,8,length.out = 100)) %>% 
  mutate(y.biphasic = complex_biphasic_trend(weeks = t, 
                                             alpha = 0.81,
                                             beta1 = 0.1,
                                             beta2 = -0.04,
                                             kappa = 2,
                                             gamma = 0.24),
         y.linear = 0.860 + t*0.083) %>% 
  ggplot(aes(x = t)) + 
  geom_line(aes(y = y.biphasic)) + 
  geom_line(aes(y = y.linear),
            lty = 2) + 
  scale_y_continuous("TTP in days, log10 scale",
                     breaks = log10(c(1,5,10,15,25,30,42)),
                     labels = c(1,5,10,15,25,30,42)) + 
  coord_cartesian(ylim = c(log10(3),log10(42))) + 
  labs(x = "Weeks since randomization")
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "models", "00_models-hypothesized.tiff"),
       device = "tiff",
       height = 5,
       width = 7,
       units = "in",
       dpi = 300)
```

-   **Models:** Bayesian (linear fit), Burger bi-linear model, etc.

-   **LOD:** 25, 30, 42

# Descriptive Profile

## Quick Summary

::: columns
::: {.column width="30%"}
```{r}
df_analysis_remox %>% 
  group_by(ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "REMoxTB") %>% 
  kable_styling(font_size = 20)

df_analysis_mams %>% 
  group_by(ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "MAMS-TB") %>% 
  kable_styling(font_size = 20)
```
:::

::: {.column width="30%"}
```{r}
df_analysis_remox %>% 
  group_by(week = floor(weeks), 
           ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  group_by(week) %>%
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "REMoxTB") %>% 
  kable_styling(font_size = 12)
```
:::

::: {.column width="30%"}
```{r}
df_analysis_mams %>% 
  group_by(week = floor(weeks), 
           ttp = cut(dtp_42, breaks = c(0,30,42,45), right = FALSE)) %>% 
  summarise(n = n()) %>% 
  group_by(week) %>%
  mutate(prop = n/sum(n)) %>% 
  kable(digits = 4,
        caption = "MAMS-TB") %>% 
  kable_styling(font_size = 12)
```
:::
:::

## TTP v. Time (REMoxTB)

```{r}
#| fig-cap: "Observed TTP trajectories, where anything at or above 42 receives a value of 42."
p1 <- df_analysis_remox %>% 
  ggplot(aes(x = weeks, y = dtp_42, col = treat, lty = treat)) + 
  # geom_point(alpha = 0.3,
  #            position = position_jitter(width = 0.1,height = 0)) +
  geom_smooth(method = lm, 
              formula = y ~ splines::bs(x, 4)) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43))  + 
  geom_hline(yintercept = 42, 
             lty = 2) +
  theme(legend.position = c(0.8,0.2),
        legend.title = element_blank()) + 
  scale_color_manual(values = ucsf_col_pal)

p2 <- df_analysis_remox %>% 
  ggplot(aes(x = weeks, y = dtp_42, group=trial_no)) + 
  facet_wrap(~treat, ncol = 1) + 
  geom_line(alpha = 0.1,
            col = "darkgray") + 
  geom_smooth(aes(group = treat,
                  lty = treat),
              method = lm, 
              formula = y ~ splines::bs(x, 4),
              col = "black",
              se = FALSE) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43)) +
  geom_hline(yintercept = 42, 
             lty = 2) + 
  theme(legend.position = "none")

p1 + p2 + 
  plot_annotation(tag_levels = "A")
```

```{r}
#| eval: false
ggsave(file = here("graphs", "descriptive", "01_trajectories-remox-tb.tiff"),
       device = "tiff",
       height = 5,
       width = 10,
       units = "in",
       dpi = 300)
```

## TTP v. Time (REMoxTB) Takeaway

Panel A

-   The two novel regimen trajectories are indistinguishable from each other.
-   Both novel regimens appear to improve TTP faster than control.

Panel B

-   Individual trajectories are often high variance
-   Individual trajectories tend to be increasing over time. There are very few that appear to start high/low and stay there. (e.g., treatment effect is observable)

## TTP v. Time (MAMS-TB)

```{r}
#| fig-cap: "Observed TTP trajectories, where anything at or above 42 receives a value of 42."
p1_mams <- df_analysis_mams %>% 
  ggplot(aes(x = weeks, y = dtp_42, col = Treatm_arm, lty = Treatm_arm)) + 
  # geom_point(alpha = 0.3,
  #            position = position_jitter(width = 0.1,height = 0)) +
  geom_smooth(method = lm, 
              formula = y ~ splines::bs(x, 4), 
              aes(group = Treatm_arm)) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43))  + 
  geom_hline(yintercept = 42, 
             lty = 2) +
  theme(legend.position = c(0.8,0.2),
        legend.title = element_blank()) + 
  scale_color_manual(values = ucsf_col_pal)

p2_mams <- df_analysis_mams %>% 
  ggplot(aes(x = weeks, y = dtp_42, group=patient.id)) + 
  facet_wrap(~Treatm_arm, ncol = 1) + 
  geom_line(alpha = 0.3,
            col = "darkgray") + 
  geom_smooth(aes(group = Treatm_arm,
                  lty = Treatm_arm),
              method = lm, 
              formula = y ~ splines::bs(x, 4),
              col = "black",
              se = FALSE) + 
  scale_y_log10("TTP in days, log10 scale",
                breaks = c(5,7,10,15,20,30,42),
                labels = c(5,7,10,15,20,30,42)) + 
  scale_x_continuous("Days from randomization", 
                     breaks = 0:8,
                     labels = seq(0,56, by = 7)) +
  coord_cartesian(y = c(5,43)) +
  geom_hline(yintercept = 42, 
             lty = 2) + 
  theme(legend.position = "none")

p1_mams + p2_mams + 
  plot_annotation(tag_levels = "A")
```

```{r}
#| eval: false
ggsave(file = here("graphs", "descriptive", "01_trajectories-mams-tb.tiff"),
       device = "tiff",
       height = 7,
       width = 11,
       units = "in",
       dpi = 300)
```

```{r}
#| eval: false
(p1 + p2) / (p1_mams + p2_mams) + 
  plot_annotation(tag_levels = "A")

ggsave(file = here("graphs", "descriptive", "01_trajectories-combined.tiff"),
       device = "tiff",
       height = 12,
       width = 15,
       units = "in",
       dpi = 300)
```

## TTP v. Time (MAMS-TB) Takeaway

Panel A

-   There is substantial overlap between all regimens, but all appear to have steeper slope (at least initially) during the first 4 weeks.

Panel B

-   Individual trajectories are often high variance
-   Individual trajectories tend to be increasing over time. There are very few that appear to start high/low and stay there. (e.g., treatment effect is observable)

## Data Distribution v. Time

\[WANT ALLUVIAL PLOT... \]

```{r}
p1 <- df_analysis_remox %>% 
  group_by(weeks = round(weeks), treat) %>% 
  summarise(prop.g25 = mean(dtp > 30 & !is.na(dtp))) %>% 
  ggplot(aes(x = weeks, y = prop.g25, col = treat)) + 
  geom_line() + 
  scale_y_continuous("P(30 < DTP < 42)") +
  coord_cartesian(ylim = c(0,1)) +
  theme_bw() + 
  theme(legend.title = element_blank())

p2 <- df_analysis_remox %>% 
  group_by(weeks = round(weeks), treat) %>% 
  summarise(prop.g25 = mean(is.na(dtp))) %>% 
  ggplot(aes(x = weeks, y = prop.g25, col = treat)) + 
  geom_line() + 
  scale_y_continuous("P(DTP >= 42)") +
  coord_cartesian(ylim = c(0,1)) +
  theme_bw() + 
  theme(legend.title = element_blank())

p3 <- df_analysis_remox %>% 
  group_by(weeks = round(weeks), treat) %>% 
  summarise(prop.g25 = mean(dtp <= 30)) %>% 
  ggplot(aes(x = weeks, y = prop.g25, col = treat)) + 
  geom_line() + 
  scale_y_continuous("P(DTP <= 30)") +
  coord_cartesian(ylim = c(0,1)) +
  theme_bw() + 
  theme(legend.title = element_blank())

p2 / p1 / p3 + 
  plot_annotation(tag_levels = "A")
```

## Weekly Alluvial Plot - REMoxTB

```{r}
df_remox_flow <-
  df_analysis_remox %>% 
  mutate(weeks_rounded = ceiling(weeks)) %>% 
  group_by(trial_no, weeks_rounded) %>% 
  mutate(dtp_mean = mean(dtp_42, na.rm = TRUE)) %>% # For individuals who have more than one observed TTP in a week
  mutate(category = case_when(dtp_mean <= 30 ~ "TTP \u2264 30",
                              dtp_mean > 30 & dtp_mean < 42 ~ "30 < TTP < 42",
                              dtp_mean >= 42 | is.na(dtp_mean) ~ "TTP \u2265 42")) %>% 
  mutate(category = factor(category, levels = c("TTP \u2265 42", "30 < TTP < 42", "TTP \u2264 30"))) %>% 
  dplyr::select(trial_no, weeks_rounded, category) %>% 
  distinct() #%>% arrange(trial_no, weeks_rounded) 

alluv_remox <- ggplot(df_remox_flow, aes(x = weeks_rounded, stratum = category, alluvium = trial_no, fill = category)) + 
  geom_flow() + 
  scale_fill_manual(values = ucsf_col_pal[c(2,9,6)]) +
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  geom_stratum(col = "white") +
  labs(x = "Weeks from randomization",
       y = "Number of samples") + 
  theme(legend.title = element_blank())

alluv_remox
```

## Weekly Alluvial Plot - MAMS-TB

```{r}
df_mams_flow <-
  df_analysis_mams %>% 
  mutate(weeks_rounded = floor(weeks)) %>% 
  group_by(patient.id, weeks_rounded) %>% 
  mutate(dtp_mean = mean(dtp_42, na.rm = TRUE)) %>% # For individuals who have more than one observed TTP in a week
  mutate(category = case_when(dtp_mean <= 30 ~ "TTP \u2264 30",
                              dtp_mean > 30 & dtp_mean < 42 ~ "30 < TTP < 42",
                              dtp_mean >= 42 | is.na(dtp_mean) ~ "TTP \u2265 42")) %>% 
  mutate(category = factor(category, levels = c("TTP \u2265 42", "30 < TTP < 42", "TTP \u2264 30"))) %>% 
  dplyr::select(patient.id, weeks_rounded, category) %>% 
  distinct() #%>% arrange(trial_no, weeks_rounded) 

alluv_mams <- ggplot(df_mams_flow, aes(x = weeks_rounded, stratum = category, alluvium = patient.id, fill = category)) + 
  geom_flow() + 
  scale_fill_manual(values = ucsf_col_pal[c(2,9,6)]) +
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  geom_stratum(col = "white") +
  labs(x = "Weeks from randomization",
       y = "Number of samples") + 
  theme(legend.title = element_blank())

alluv_mams
```

```{r}
#| eval: false
alluv_remox / alluv_mams + 
  plot_annotation(tag_levels = "A") + 
  plot_layout(guides = "collect")

ggsave(file = here("graphs", "descriptive", "02_alluvial-combined.tiff"),
       device = "tiff",
       height = 5,
       width = 7,
       units = "in",
       dpi = 300)
```

## Alluvial Plots: Takeaways

-   "Most" people convert from TTP less than 30 to above the limit of detection *without* a sample returning a TTP between 30 and 42 days.
-   The 30-42 day observations tend to occur in weeks 4+
-   **NOTE** by week 8, the majority of samples are not returning any information.

## Weekly TTP Distribution (REMoxTB)

```{r}
#| fig-cap: "Distribution of TTP measures at each week post-randomization."
df_analysis_remox %>% 
  mutate(weeks_cat = floor(weeks)) %>% #with(., table(weeks_cat))
  mutate(weeks_cat = factor(weeks_cat)) %>% 
  ggplot(aes(x = dtp_42)) + 
  facet_wrap(~weeks_cat)+#, 
             # scales = "free_y") + 
  geom_histogram() + 
  geom_vline(xintercept = c(30,42), lty = 2) + 
  scale_x_log10("Days to Positivity, log scale",
                breaks = c(1,5,10,20,35),
                labels = c(1,5,10,20,35)) + 
  theme(axis.title.y = element_blank())
```

## Takeaway: Weekly TTP Distribution (REMoxTB)

# Variance/Signal-to-Noise Investigation

## Proportion of data censored for varying LOD limits

*Idea:* Maybe this should a "relative" to 42 plot, rather than an absolute plot? Would that make it easier to read? or add in limited horizontal lines?

```{r}
# TTP \u2265 
# TTP \u2265 
# TTP \u2265 
# TTP \u2265 
p_cens_remox <- df_analysis_remox %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  pivot_longer(names_to = "TTP censoring limit",
               values_to = "Proportion of samples below limit",
               cols = 2:5) %>% 
  ggplot(aes(x = week, y = `Proportion of samples below limit`, fill = `TTP censoring limit`)) + 
  geom_bar(position = position_dodge(),
           col = "white",
           stat = "identity") + 
  scale_fill_manual(values = ucsf_col_pal) +
  scale_y_continuous(breaks = seq(0,1,by = 0.1),
                     labels = seq(0,1,by = 0.1)) + 
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  labs(x = "Weeks since randomization") + 
  coord_cartesian(ylim = c(0,1))

p_cens_mams <- df_analysis_mams %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  pivot_longer(names_to = "TTP censoring limit",
               values_to = "Proportion of samples below limit",
               cols = 2:5) %>% 
  ggplot(aes(x = week, y = `Proportion of samples below limit`, fill = `TTP censoring limit`)) + 
  geom_bar(position = position_dodge(),
           col = "white",
           stat = "identity") + 
  # theme(axis.title.y = element_blank()) + 
  scale_fill_manual(values = ucsf_col_pal) +
  scale_y_continuous(breaks = seq(0,1,by = 0.1),
                     labels = seq(0,1,by = 0.1)) + 
  scale_x_continuous(breaks = 0:8,
                     labels = 0:8) + 
  labs(x = "Weeks since randomization") + 
  coord_cartesian(ylim = c(0,1))

p_cens_remox + p_cens_mams + 
  plot_layout(guides = "collect") + 
  plot_annotation(tag_levels = "A")  &
  theme(legend.position = "bottom")
```

```{r}
#| eval: false
ggsave(file = here("graphs", "descriptive", "03_bar-censored-combined.tiff"),
       device = "tiff",
       height = 5,
       width = 8,
       units = "in",
       dpi = 300)
```

## Table Censored (REMoxTB)

```{r}
df_analysis_remox %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  mutate("Difference in proportions: 42 v 30 days" = `42 days` - `30 days`) %>%
  kable(digits = 4, 
        caption = "Proportion of samples below censoring limit") %>% 
  kable_styling(font_size = 18)
```

## Table Censored (MAMS)

```{r}
df_analysis_mams %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("25 days" = mean(dtp_42 < 25, na.rm = TRUE),
            "30 days" = mean(dtp_42 < 30, na.rm = TRUE),
            "35 days" = mean(dtp_42 < 35, na.rm = TRUE),
            "42 days" = mean(dtp_42 < 42, na.rm = TRUE)) %>% 
  mutate("Difference in proportions: 42 v 30 days" = `42 days` - `30 days`) %>% 
  kable(digits = 4,
        caption = "Proportion of samples below censoring limit") %>% 
  kable_styling(font_size = 18)
```

```{r}
#| eval: false
df_analysis_mams %>% 
  group_by(week = floor(weeks)) %>% 
  summarise("TTP \u2265 25" = mean(dtp_42 >= 25, na.rm = TRUE),
            "TTP \u2265 30" = mean(dtp_42 >= 30, na.rm = TRUE),
            "TTP \u2265 35" = mean(dtp_42 >= 35, na.rm = TRUE),
            "TTP \u2265 42" = mean(dtp_42 >= 42, na.rm = TRUE)) %>% 
  # mutate("Absolute difference in proportions: 30 v 42 days" = `TTP ≥ 30` - `TTP ≥ 42`) %>% 
  kable(digits = 3,
        caption = "Proportion censored",
        format = "latex") %>% 
  kable_styling()
```

## Takeaway

-   Changing the censoring limit to 30 or 35 has very limited impact on the proportion of data "left out" of the analyses, especially at early weeks where the data is the richest.

# Modeling Work

<!-- ## MAMS-TB: LINEAR (population level) -->

```{r}
# mcmc_trace_fun <- function(pars){
#   mcmc_trace(posterior_main,
#              pars = pars,
#              facet_args = list(nrow = 2, labeller = label_parsed)) 
# }

load(here("data", "model-generated", "2023-07-20_linear-mams-lod-42.RData"))
load(here("data", "model-generated", "2023-07-20_linear-mams-lod-30.RData"))
load(here("data", "model-generated", "2023-08-15_linear-mams-lod-25.RData"))
load(here("data", "model-generated", "2023-07-20_linear-remox-lod-42.RData"))
load(here("data", "model-generated", "2023-07-31_linear-remox-lod-30.RData"))
```

```{r}
#| eval: false
# THIS EVALUATES THE POPULATION-LEVEL SLOPE, BUT WE ARE INTERESTED IN THE GROUP-LEVEL SLOPE
o_42 <- m_linear_mams_42 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(lod = 42)

o_30 <- m_linear_mams_30 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(lod = 30)

o_25 <- m_linear_mams_25 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(lod = 25)

bind_rows(o_42, o_30, o_25) %>%
  mutate(ci.width = .upper - .lower,
         estimate.ratio = .value/.value[lod == 42]) %>%
  mutate(ci.ratio = ci.width/ci.width[lod==42]) %>%
  kable(digits = 3, caption = "30 may be too low for the MAMS data. Curious about other cutoffs. Perhaps a grid run? Linear models compile within 5 minutes.") %>%
  kable_styling(font_size = 16)

o_42 <- m_linear_remox_42 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(lod = 42)

o_30 <- m_linear_remox_30 %>%
  gather_draws(b_weeks) %>%
  median_hdci() %>%
  mutate(lod = 30)

bind_rows(o_42, o_30) %>%
  mutate(ci.width = .upper - .lower,
         estimate.ratio = .value[lod == 30]/.value[lod == 42]) %>%
  mutate(ci.ratio = ci.width[lod == 30]/ci.width[lod==42]) %>%
  kable(digits = 3, caption = "REMox") %>%
  kable_styling(font_size = 16)
```

## MAMS-TB: Linear (treatment level)

```{r}
coef_mams_25 <-
    coef(m_linear_mams_25, summary = F)$Treatm_arm %>% 
    as_tibble()

t25 <- coef_mams_25 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) 

coef_mams_30 <-
    coef(m_linear_mams_30, summary = F)$Treatm_arm %>% 
    as_tibble()

t30 <- coef_mams_30 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) 

coef_mams_42 <-
    coef(m_linear_mams_42, summary = F)$Treatm_arm %>% 
    as_tibble()

coefs_mams <- coef_mams_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  bind_rows(t30) %>% 
  bind_rows(t25) %>% 
  filter(str_detect(key, "weeks")) 

coefs_mams %>% 
  transmute(key, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval) %>% 
  rename(" " = key, "Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, #"CI width" = .width,
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  kable(digits = 3,
        caption = "(MAMS-TB) Posterior group-level estimates of slope from the 30- and 42-day models (95% Credible Intervals).") %>% 
  kable_styling(font_size = 16) %>% 
  pack_rows(group_label = "LOD = 42", 
             start_row = 1,
             end_row = 5) %>% 
  pack_rows(group_label = "LOD = 30",
             start_row = 6,
             end_row = 10) %>% 
  pack_rows(group_label = "LOD = 25",
             start_row = 11,
             end_row = 15)
```

## REMoxTB: Linear (treatment level)

```{r}
coef_remox_30 <-
    coef(m_linear_remox_30, summary = F)$treat %>% 
    as_tibble()

t30 <- coef_remox_30 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) 

coef_remox_42 <-
    coef(m_linear_remox_42, summary = F)$treat %>% 
    as_tibble()

coefs_remox <- coef_remox_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_hdi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>% 
  bind_rows(t30) %>% 
  filter(str_detect(key, "weeks")) 

coefs_remox %>% 
  transmute(key, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval) %>% 
  rename(" " = key, "Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, #"CI width" = .width, 
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  kable(digits = 3,
        caption = "(REMoxTB) Posterior group-level estimates of slope from the 30- and 42-day models.") %>% 
  kable_styling(font_size = 16) %>% 
  pack_rows(group_label = "LOD = 42", 
             start_row = 1,
             end_row = 3) %>% 
  pack_rows(group_label = "LOD = 30",
             start_row = 4,
             end_row = 6)
```

## Linear changes in estimates

```{r}
coefs_mams %>% 
  mutate(lod = c(rep(42, 5), rep(30,5), rep(25,5))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  summarise(point.estimate.ratio.30.42 = value[lod==30]/value[lod == 42],
            CI.width.ratio.30.42 = CI.width[lod==30]/CI.width[lod == 42],
            point.estimate.ratio.25.42 = value[lod==25]/value[lod == 42],
            CI.width.ratio.25.42 = CI.width[lod==25]/CI.width[lod == 42]) %>% 
  kable(digits = 4,
        caption = "(MAMS-TB) Change in point estimate and confidence interval width (30 days / 42 days).") %>% 
  kable_styling(font_size = 20)

coefs_remox %>% 
  mutate(lod = c(rep(42, 3), rep(30,3))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  summarise(point.estimate.ratio = value[lod == 30]/value[lod == 42],
            CI.width.ratio = CI.width[lod == 30]/CI.width[lod == 42]) %>% 
  kable(digits = 4,
        caption = "(REMoxTB) Change in point estimate and confidence interval width (30 days / 42 days).") %>% 
  kable_styling(font_size = 20)
```

## MAMS-TB: Biphasic (treatment level)

```{r}
load(here("data", "model-generated", "2023-08-02_biphasic-mams-lod-30.RData"))
load(here("data", "model-generated", "2023-08-02_biphasic-mams-lod-42.RData"))
```

```{r}
coef_mams_30 <-
    coef(m_nonlinear_mams_30, summary = F)$Treatm_arm %>% 
    as_tibble() 

t30 <- coef_mams_30 %>% 
  gather() %>%
  group_by(key) %>% #summarise(n = n())
  mode_qi(value) %>% # things get duplicated here.... (qi works, but not hdi?)
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(lod = 30)

coef_mams_42 <-
    coef(m_nonlinear_mams_42, summary = F)$Treatm_arm %>% 
    as_tibble()

coefs_mams_nl <- coef_mams_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_qi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>%  
  mutate(lod = 42) %>% 
  bind_rows(t30) %>% 
  filter(str_detect(key, "beta")) %>%
  separate(col = key,
           into = c("regimen", "coefficient"))

coefs_mams_nl %>% 
  transmute(regimen, coefficient, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval, lod) %>% 
  rename("Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, 
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  arrange(coefficient, regimen) %>% 
  kable(digits = 3,
        # escape = FALSE,
        caption = "(MAMS-TB) Posterior group-level estimates of slope from the 30- and 42-day models.") %>% 
  kable_styling(font_size = 14) %>% 
  pack_rows(group_label = "beta_1",
             start_row = 1,
             end_row = 10) %>%
  pack_rows(group_label = "beta_2",
             start_row = 11,
             end_row = 20)
```

## REMoxTB: Biphasic (treatment level)

```{r}
load(here("data", "model-generated", "2023-08-04_biphasic-remox-lod-30.RData"))
load(here("data", "model-generated", "2023-08-03_biphasic-remox-lod-42.RData"))
```

```{r}
coef_remox_30 <-
    coef(m_nonlinear_remox_30, summary = F)$treat %>% 
    as_tibble() 

t30 <- coef_remox_30 %>% 
  gather() %>%
  group_by(key) %>% #summarise(n = n())
  mode_qi(value) %>% # things get duplicated here.... (qi works, but not hdi?)
  mutate_if(is.double, round, digits = 3) %>% 
  mutate(lod = 30)

coef_remox_42 <-
    coef(m_nonlinear_remox_42, summary = F)$treat %>% 
    as_tibble()

coefs_remox_nl <- coef_remox_42 %>% 
  gather() %>% 
  group_by(key) %>% 
  mode_qi(value) %>% 
  mutate_if(is.double, round, digits = 3) %>%  
  mutate(lod = 42) %>% 
  bind_rows(t30) %>% 
  filter(str_detect(key, "beta")) %>%
  separate(col = key,
           into = c("nuis", "regimen", "regimen2", "coefficient")) %>% 
  mutate(regimen = paste0(regimen, "/", regimen2)) %>% 
  dplyr::select(-nuis, -regimen2)

coefs_remox_nl %>% 
  transmute(regimen, coefficient, value, .lower, .upper, `CI width` = abs(.upper - .lower), .point, .interval, lod) %>% 
  rename("Estimate" = value, "CI.l" = .lower, "CI.u" = .upper, 
         #"CI width" = .width, 
         "Point Estimation" = .point, "CI Estimation" = .interval) %>% 
  arrange(coefficient, regimen) %>% 
  kable(digits = 3,
        # escape = FALSE,
        caption = "(REMoxTB) Posterior group-level estimates of slope from the 30- and 42-day models.") %>% 
  kable_styling(font_size = 16) %>% 
  pack_rows(group_label = "beta_1",
             start_row = 1,
             end_row = 6) %>%
  pack_rows(group_label = "beta_2",
             start_row = 7,
             end_row = 12)
```

## ALL (visualization)

```{r}
mams_diff <- coefs_mams %>% 
  mutate(lod = c(rep(42, 5), rep(30,5), rep(25,5))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  # Comparing each lod against 42
  summarise(lod, 
            point.estimate.ratio = value/value[lod == 42],
            CI.width.ratio = CI.width/CI.width[lod == 42]) %>% 
  # Removing reference (lod = 42)
  filter(lod != 42) %>% 
  mutate(data = "MAMS-TB")

mams_diff_nl <- coefs_mams_nl %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(regimen, coefficient) %>% 
  # Comparing each lod against 42
  summarise(lod, 
            point.estimate.ratio = value/value[lod == 42],
            CI.width.ratio = CI.width/CI.width[lod == 42]) %>% 
  # Removing reference (lod = 42)
  filter(lod != 42) %>% 
  mutate(data = "MAMS-TB (nl)")

remox_diff <- coefs_remox %>% 
  mutate(lod = c(rep(42, 3), rep(30,3))) %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(key) %>% 
  # Comparing each lod against 42
  summarise(lod, 
            point.estimate.ratio = value/value[lod == 42],
            CI.width.ratio = CI.width/CI.width[lod == 42]) %>% 
  # Removing reference (lod = 42)
  filter(lod != 42) %>% 
  mutate(data = "REMoxTB")

remox_diff_nl <- coefs_remox_nl %>% 
  mutate(CI.width = abs(.upper - .lower)) %>% 
  group_by(regimen, coefficient) %>% 
  summarise(lod, 
            point.estimate.ratio = value/value[lod == 42],
            CI.width.ratio = CI.width/CI.width[lod == 42]) %>% 
   # Removing reference (lod = 42)
  filter(lod != 42) %>% 
  mutate(data = "REMoxTB (nl)")

bind_rows(rename(mams_diff, regimen = key), 
          rename(remox_diff, regimen = key),
          mams_diff_nl,
          remox_diff_nl) %>% 
  mutate(`Censoring Limit (days)` = as.factor(lod),
         `Dataset + Model` = data) %>% 
  ggplot(aes(x = point.estimate.ratio, y = CI.width.ratio)) +
  geom_hline(yintercept = 1, col = "black") + 
  geom_vline(xintercept = 1, col = "black") + 
  geom_point(alpha = 0.8,
             size = 1.8,
             aes(col = `Dataset + Model`,
                 shape = `Censoring Limit (days)`)) +
  scale_shape_manual(values = c(3,4)) + 
  coord_fixed(ylim = c(0.25,4.5),
              xlim = c(0.25,4.5)) +
  scale_x_log10(breaks = c(0.1,0.5,1,2,4,6)) + 
  scale_y_log10(breaks = c(0.1,0.5,1,2,4,6)) +
  scale_color_manual(values = ucsf_col_pal[c(2,3,8,9)]) + 
  labs(x = TeX("$\\hat{\\theta}_{j, \\cdot} / \\hat{\\theta}_{j, 42}$"),
       y = "95% CI width / 95% CI width (42 day)") +
  theme(axis.line = element_blank(),
        legend.position = "right")
```

```{r}
#| eval: false
ggsave(filename = here("graphs", "models", "05_point-plot_model-estimate-ratios.png"), 
       device = "png",
       height = 5,
       width = 6, 
       units = "in")

```

## Takeaway

For the REMoxTB and MAMS-TB data, point estimates in the 30-day models *decrease* relative to the 42-day models, as expected when "removing" data at the upper end of the spectrum.

However, credible intervals (e.g., precision) remain either the same or *improve* in the 30-day models relative to the 42-day models. In the REMoxTB data, the CIs improve more than the point estimates shrink. This is also true for 3 out of 5 arms in the MAMS-TB data.
